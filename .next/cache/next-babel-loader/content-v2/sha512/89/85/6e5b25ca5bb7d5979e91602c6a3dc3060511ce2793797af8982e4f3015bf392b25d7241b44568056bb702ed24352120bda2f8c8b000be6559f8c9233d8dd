{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Base/Documents/cms-new-jic/pages/login.js\";\nimport React from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport styles from \"../styles/styles.css\"; // import { UserOutlined, LockOutlined } from '@ant-design/icons';\n\nimport axios from \"../axios/axios\";\nimport Cookies from 'js-cookie';\nexport default function Login() {\n  const onFinish = values => {\n    axios({\n      method: \"POST\",\n      url: \"/api/internal/auth/login\",\n      data: {\n        email: values.email,\n        password: values.password\n      }\n    }).then(({\n      data\n    }) => {\n      Cookies.set(\"access_token\", data.accessToken);\n      Cookies.set(\"refresh_token\", data.refreshToken);\n    }).catch(err => console.log(err));\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.logincontainer,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://dev.www.portoapp.id/Porto-logo.png\",\n      className: styles.logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      name: \"basic\",\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      },\n      initialValues: {\n        remember: true\n      },\n      onFinish: value => onFinish(value),\n      onFinishFailed: onFinishFailed,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Email\",\n        name: \"email\",\n        rules: [{\n          required: true,\n          message: 'Please input your email!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"remember\",\n        valuePropName: \"checked\",\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n;","map":{"version":3,"sources":["/Users/Base/Documents/cms-new-jic/pages/login.js"],"names":["React","Form","Input","Button","Checkbox","styles","axios","Cookies","Login","onFinish","values","method","url","data","email","password","then","set","accessToken","refreshToken","catch","err","console","log","onFinishFailed","errorInfo","logincontainer","logo","span","remember","value","required","message","offset"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport styles from \"../styles/styles.css\"\n// import { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport axios from \"../axios/axios\"\nimport Cookies from 'js-cookie';\n\n\nexport default function Login() {\n    const onFinish = (values) => {\n        axios({\n            method: \"POST\",\n            url: \"/api/internal/auth/login\",\n            data: {\n                email:values.email,\n                password:values.password\n            }\n        })\n        .then(({data}) => {\n            Cookies.set(\"access_token\", data.accessToken)\n            Cookies.set(\"refresh_token\", data.refreshToken)\n        })\n        .catch(err =>  console.log(err))\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <div className={styles.logincontainer}>\n            <img src=\"https://dev.www.portoapp.id/Porto-logo.png\" className={styles.logo} />\n            <Form\n                name=\"basic\"\n                labelCol={{\n                    span: 8,\n                }}\n                wrapperCol={{\n                    span: 16,\n                }}\n                initialValues={{\n                    remember: true,\n                }}\n                onFinish={(value) => onFinish(value)}\n                onFinishFailed={onFinishFailed}\n                autoComplete=\"off\"\n            >\n                <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your email!',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your password!',\n                        },\n                    ]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"remember\"\n                    valuePropName=\"checked\"\n                    wrapperCol={{\n                        offset: 8,\n                        span: 16,\n                    }}\n                >\n                    <Checkbox>Remember me</Checkbox>\n                </Form.Item>\n\n                <Form.Item\n                    wrapperCol={{\n                        offset: 8,\n                        span: 16,\n                    }}\n                >\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}